<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="yjkellyjoo.contract.dao.SourcecodeDao">
	
	<resultMap id="SourcecodeDataMap" type="yjkellyjoo.contract.model.SourcecodeVo">
		<id column="Address" property="address" />
		<result column="ABI" property="abi" />  			
		<result column="CompilerVersion" property="compilerVersion" />  			
		<result column="ConstructorArguments" property="constructorArguments" />  			
		<result column="ContractName" property="contractName" />  			
		<result column="Library" property="library" />			
		<result column="LicenseType" property="licenseType" />  			
		<result column="OptimizationUsed" property="optimizationUsed" />  			
		<result column="Runs" property="runs" />  			
		<result column="SourceCode" property="sourceCode" />  			
		<result column="SwarmSource" property="swarmSource" /> 	
	</resultMap>

	<sql id="selectCveSql">
		SELECT 
			TB_SOURCECODE.Address, 
			TB_SOURCECODE.ABI, 
			TB_SOURCECODE.CompilerVersion, 
			TB_SOURCECODE.ConstructorArguments, 
			TB_SOURCECODE.ContractName, 
			TB_SOURCECODE.Library, 
			TB_SOURCECODE.LicenseType, 
			TB_SOURCECODE.OptimizationUsed,
			TB_SOURCECODE.Runs,
			TB_SOURCECODE.SourceCode,	
			TB_SOURCECODE.SwarmSource
		FROM
			TB_SOURCECODE
	</sql>
	
	
	<select id="selectData" resultMap="SourcecodeDataMap">
		<include refid="selectCveSql" />
		WHERE 
			TB_SOURCECODE.ADDRESS = #{ADDRESS}	
    	/* yjkellyjoo.contract.dao.SourcecodeDao.selectData */
	</select>	
	
	
	<insert id="insertAllData" parameterType="yjkellyjoo.contract.model.SourcecodeVo">
		INSERT INTO TB_SOURCECODE (
			Address, 
			ABI, 
			CompilerVersion, 
			ConstructorArguments, 
			ContractName, 
			Library, 
			LicenseType, 
			OptimizationUsed,
			Runs,
			SourceCode,	
			SwarmSource,
			Balance
		) VALUES 
		<foreach collection="list" item="item" separator=", ">
		(
			#{item.address}, 
			#{item.abi},
			#{item.compilerVersion},
			#{item.constructorArguments},
			#{item.contractName},
			#{item.library},
			#{item.licenseType},
			#{item.optimizationUsed},
			#{item.runs},
			#{item.sourceCode},
			#{item.swarmSource},
			#{item.balance}
		)
		</foreach>
		/* yjkellyjoo.contract.dao.SourcecodeDao.insertAllData */
	</insert>


	<delete id="deleteAllData">
		DELETE FROM TB_SOURCECODE
		/* yjkellyjoo.contract.dao.SourcecodeDao.deleteAllData */
	</delete>


	<update id="updateData">
		update TB_SOURCECODE set
			Balance = #{balance}
		where ADDRESS = #{ADDRESS}
		/* yjkellyjoo.contract.dao.SourcecodeDao.updateData */
	</update>


	<!--
        <select id="selectCveListInLimit" parameterType="hashmap" resultMap="SourcecodeDataMap">
            SELECT
                AFFECTS
            FROM TB_SOURCECODE
            ORDER BY
                ID ASC
            LIMIT #{start}, #{end}
            /* yjkellyjoo.contract.dao.SourcecodeDao.selectCveListInLimit */
        </select>
     -->
</mapper>