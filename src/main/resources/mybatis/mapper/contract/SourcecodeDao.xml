<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="yjkellyjoo.contract.dao.SourcecodeDao">
	
	<resultMap id="SourcecodeDataMap" type="yjkellyjoo.contract.model.SourcecodeVo">
		<id column="ADDRESS" property="address" />
		<result column="ABI" property="abi" />  			
		<result column="COMPILERVERSION" property="compilerVersion" />  			
		<result column="CONSTRUCTORARGUMENTS" property="constructorArguments" />  			
		<result column="CONTRACTNAME" property="contractName" />  			
		<result column="LIBRARY" property="library" />			
		<result column="LICENSETYPE" property="licenseType" />  			
		<result column="OPTIMIZATIONUSED" property="optimizationUsed" />  			
		<result column="RUNS" property="runs" />  			
		<result column="SOURCECODE" property="sourceCode" />  			
		<result column="SWARMSOURCE" property="swarmSource" /> 	
	</resultMap>

	<sql id="selectCveSql">
		SELECT 
			TB_SOURCECODE.ADDRESS, 
			TB_SOURCECODE.ABI, 
			TB_SOURCECODE.COMPILERVERSION, 
			TB_SOURCECODE.CONSTRUCTORARGUMENTS, 
			TB_SOURCECODE.CONTRACTNAME, 
			TB_SOURCECODE.LIBRARY, 
			TB_SOURCECODE.LICENSETYPE, 
			TB_SOURCECODE.OPTIMIZATIONUSED,
			TB_SOURCECODE.RUNS,
			TB_SOURCECODE.SOURCECODE,	
			TB_SOURCECODE.SWARMSOURCE
		FROM
			TB_SOURCECODE
	</sql>
	
	<select id="selectData" resultMap="SourcecodeDataMap">
		<include refid="selectCveSql" />
		WHERE 
			TB_SOURCECODE.ADDRESS = #{ADDRESS}	
    	/* yjkellyjoo.contract.dao.SourcecodeDao.selectData */
	</select>	
	
	<insert id="insertAllData" parameterType="yjkellyjoo.contract.model.SourcecodeVo">
		INSERT INTO TB_SOURCECODE (
			ADDRESS, 
			ABI, 
			COMPILERVERSION, 
			CONSTRUCTORARGUMENTS, 
			CONTRACTNAME, 
			LIBRARY, 
			LICENSETYPE, 
			OPTIMIZATIONUSED,
			RUNS,
			SOURCECODE,	
			SWARMSOURCE
		) VALUES 
		<foreach collection="list" item="item" separator=", ">
		(
			#{item.address}, 
			#{item.abi},
			#{item.compilerVersion},
			#{item.constructorArguments},
			#{item.contractName},
			#{item.library},
			#{item.licenseType},
			#{item.optimizationUsed},
			#{item.runs},
			#{item.sourceCode},
			#{item.swarmSource}
		)
		</foreach>
		/* yjkellyjoo.contract.dao.SourcecodeDao.insertAllData */
	</insert>





	<update id="updateData" parameterType="yjkellyjoo.contract.model.SourcecodeVo">
		update TB_SOURCECODE set
			BASIC_INFO = #{basicInfo}, 
			AFFECTS = #{affects},
 			PROBLEM_TYPE = #{problemType}, 
			CWE_ID = #{cweId}, 
			`REFERENCES` = #{references},
			DESCRIPTION = #{description},
			PUBLISHED_DATE = #{publishedDate},
			LAST_MODIFIED_DATE = #{lastModifiedDate},
			CONFIGURATIONS = #{configurations},	
			BASE_METRIC_V3 = #{baseMetricV3},
			V3_BASE_SCORE = #{v3BaseScore},
			V3_SEVERITY = #{v3Severity},
			BASE_METRIC_V2 = #{baseMetricV2},
			V2_BASE_SCORE = #{v2BaseScore},
			V2_SEVERITY = #{v2Severity}
		where ID = #{id}
		/* yjkellyjoo.contract.dao.SourcecodeDao.updateData */
	</update>

	<delete id="deleteAllData">
		DELETE FROM TB_SOURCECODE
		/* yjkellyjoo.contract.dao.SourcecodeDao.deleteAllData */
	</delete>

	<select id="selectCveListInLimit" parameterType="hashmap" resultMap="SourcecodeDataMap">
		SELECT
			AFFECTS 
		FROM TB_SOURCECODE
		ORDER BY
			ID ASC
		LIMIT #{start}, #{end}
    	/* yjkellyjoo.contract.dao.SourcecodeDao.selectCveListInLimit */
	</select>

</mapper>